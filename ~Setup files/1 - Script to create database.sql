CREATE DATABASE PRIVATE_SCHOOL;

USE PRIVATE_SCHOOL;

CREATE TABLE COURSE(
 COURSE_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
 COURSE_TITLE VARCHAR(30) NOT NULL,
 COURSE_STREAM VARCHAR(30) NOT NULL,
 COURSE_TYPE VARCHAR(30) NOT NULL,
 COURSE_START_DATE DATE NOT NULL,
 COURSE_END_DATE DATE NOT NULL
);

CREATE TABLE TRAINER(
 TRAINER_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
 TRAINER_FIRST_NAME VARCHAR(30) NOT NULL,
 TRAINER_LAST_NAME VARCHAR(30) NOT NULL,
 TRAINER_SUBJECT VARCHAR(30) NOT NULL
);

CREATE TABLE STUDENT(
 STUDENT_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
 STUDENT_FIRST_NAME VARCHAR(30) NOT NULL,
 STUDENT_LAST_NAME VARCHAR(30) NOT NULL,
 STUDENT_DATE_OF_BIRTH DATE NOT NULL,
 STUDENT_TUITION_FEES DECIMAL(7,2) NOT NULL
);

CREATE TABLE ASSIGNMENT(
 ASSIGNMENT_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
 ASSIGNMENT_TITLE VARCHAR(30) NOT NULL,
 ASSIGNMENT_DESCRIPTION VARCHAR(45) NOT NULL,
 ASSIGNMENT_SUBMISSION_DATE DATE NOT NULL,
 COURSE_ID INT NOT NULL,
 FOREIGN KEY (COURSE_ID) REFERENCES COURSE (COURSE_ID)
);

CREATE TABLE COURSE_TRAINER(
 COURSE_ID INT NOT NULL,
 TRAINER_ID INT NOT NULL,
 PRIMARY KEY (TRAINER_ID, COURSE_ID),
 FOREIGN KEY (TRAINER_ID) REFERENCES TRAINER (TRAINER_ID),
 FOREIGN KEY (COURSE_ID) REFERENCES COURSE (COURSE_ID)
);

CREATE TABLE COURSE_STUDENT(
 COURSE_ID INT NOT NULL,
 STUDENT_ID INT NOT NULL,
 PRIMARY KEY (COURSE_ID, STUDENT_ID),
 FOREIGN KEY (COURSE_ID) REFERENCES COURSE (COURSE_ID),
 FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT (STUDENT_ID)
);

CREATE TABLE STUDENT_ASSIGNMENT(
 STUDENT_ID INT NOT NULL,
 ASSIGNMENT_ID INT NOT NULL,
 STUDENT_ASSIGNMENT_ORAL_MARK DECIMAL(3,1),
 STUDENT_ASSIGNMENT_TOTAL_MARK DECIMAL(3,1),
 PRIMARY KEY (STUDENT_ID, ASSIGNMENT_ID),
 FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT (STUDENT_ID),
 FOREIGN KEY (ASSIGNMENT_ID) REFERENCES ASSIGNMENT (ASSIGNMENT_ID)
);

CREATE VIEW MULTIPLE_COURSE_STUDENTS AS
SELECT CS.STUDENT_ID, S.STUDENT_FIRST_NAME, S.STUDENT_LAST_NAME, COUNT(CS.COURSE_ID) AS COURSE_COUNT
FROM COURSE_STUDENT CS, STUDENT S
WHERE CS.STUDENT_ID = S.STUDENT_ID
GROUP BY CS.STUDENT_ID
HAVING COURSE_COUNT > 1;
